// Generated by psc version 0.9.1
"use strict";
var Prelude = require("../Prelude");
var Data_Int = require("../Data.Int");
var Data_Int_Bits = require("../Data.Int.Bits");
var Data_Show = require("../Data.Show");
var Data_Eq = require("../Data.Eq");
var Data_Bounded = require("../Data.Bounded");
var Data_Ord = require("../Data.Ord");
var Data_Semiring = require("../Data.Semiring");
var Data_Ring = require("../Data.Ring");
var Data_CommutativeRing = require("../Data.CommutativeRing");
var Data_EuclideanRing = require("../Data.EuclideanRing");
var Data_Semigroup = require("../Data.Semigroup");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var AL = (function () {
    function AL() {

    };
    AL.value = new AL();
    return AL;
})();
var BL = (function () {
    function BL() {

    };
    BL.value = new BL();
    return BL;
})();
var CL = (function () {
    function CL() {

    };
    CL.value = new CL();
    return CL;
})();
var DL = (function () {
    function DL() {

    };
    DL.value = new DL();
    return DL;
})();
var Lit = function (x) {
    return x;
};
var AddrReg = function (x) {
    return x;
};
var AddrLit = function (x) {
    return x;
};
var RegA = (function () {
    function RegA(value0) {
        this.value0 = value0;
    };
    RegA.create = function (value0) {
        return new RegA(value0);
    };
    return RegA;
})();
var LitA = (function () {
    function LitA(value0) {
        this.value0 = value0;
    };
    LitA.create = function (value0) {
        return new LitA(value0);
    };
    return LitA;
})();
var AddrLitA = (function () {
    function AddrLitA(value0) {
        this.value0 = value0;
    };
    AddrLitA.create = function (value0) {
        return new AddrLitA(value0);
    };
    return AddrLitA;
})();
var AddrRegA = (function () {
    function AddrRegA(value0) {
        this.value0 = value0;
    };
    AddrRegA.create = function (value0) {
        return new AddrRegA(value0);
    };
    return AddrRegA;
})();
var Empty = (function () {
    function Empty() {

    };
    Empty.value = new Empty();
    return Empty;
})();
var Compact = (function () {
    function Compact(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Compact.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Compact(value0, value1, value2);
            };
        };
    };
    return Compact;
})();
var A0 = (function () {
    function A0(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    A0.create = function (value0) {
        return function (value1) {
            return new A0(value0, value1);
        };
    };
    return A0;
})();
var A1 = (function () {
    function A1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    A1.create = function (value0) {
        return function (value1) {
            return new A1(value0, value1);
        };
    };
    return A1;
})();
var A2 = (function () {
    function A2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    A2.create = function (value0) {
        return function (value1) {
            return new A2(value0, value1);
        };
    };
    return A2;
})();
var A3 = (function () {
    function A3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    A3.create = function (value0) {
        return function (value1) {
            return new A3(value0, value1);
        };
    };
    return A3;
})();
var A4 = (function () {
    function A4(value0) {
        this.value0 = value0;
    };
    A4.create = function (value0) {
        return new A4(value0);
    };
    return A4;
})();
var A5 = (function () {
    function A5(value0) {
        this.value0 = value0;
    };
    A5.create = function (value0) {
        return new A5(value0);
    };
    return A5;
})();
var A6 = (function () {
    function A6(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    A6.create = function (value0) {
        return function (value1) {
            return new A6(value0, value1);
        };
    };
    return A6;
})();
var AA = (function () {
    function AA(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AA.create = function (value0) {
        return function (value1) {
            return new AA(value0, value1);
        };
    };
    return AA;
})();
var AB = (function () {
    function AB(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AB.create = function (value0) {
        return function (value1) {
            return new AB(value0, value1);
        };
    };
    return AB;
})();
var AC = (function () {
    function AC(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AC.create = function (value0) {
        return function (value1) {
            return new AC(value0, value1);
        };
    };
    return AC;
})();
var AD = (function () {
    function AD(value0) {
        this.value0 = value0;
    };
    AD.create = function (value0) {
        return new AD(value0);
    };
    return AD;
})();
var A9 = (function () {
    function A9(value0) {
        this.value0 = value0;
    };
    A9.create = function (value0) {
        return new A9(value0);
    };
    return A9;
})();
var B9 = (function () {
    function B9(value0) {
        this.value0 = value0;
    };
    B9.create = function (value0) {
        return new B9(value0);
    };
    return B9;
})();
var C9 = (function () {
    function C9(value0) {
        this.value0 = value0;
    };
    C9.create = function (value0) {
        return new C9(value0);
    };
    return C9;
})();
var D9 = (function () {
    function D9(value0) {
        this.value0 = value0;
    };
    D9.create = function (value0) {
        return new D9(value0);
    };
    return D9;
})();
var B0 = (function () {
    function B0(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    B0.create = function (value0) {
        return function (value1) {
            return new B0(value0, value1);
        };
    };
    return B0;
})();
var B1 = (function () {
    function B1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    B1.create = function (value0) {
        return function (value1) {
            return new B1(value0, value1);
        };
    };
    return B1;
})();
var B2 = (function () {
    function B2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    B2.create = function (value0) {
        return function (value1) {
            return new B2(value0, value1);
        };
    };
    return B2;
})();
var B3 = (function () {
    function B3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    B3.create = function (value0) {
        return function (value1) {
            return new B3(value0, value1);
        };
    };
    return B3;
})();
var B6 = (function () {
    function B6(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    B6.create = function (value0) {
        return function (value1) {
            return new B6(value0, value1);
        };
    };
    return B6;
})();
var BA = (function () {
    function BA(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BA.create = function (value0) {
        return function (value1) {
            return new BA(value0, value1);
        };
    };
    return BA;
})();
var BB = (function () {
    function BB(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BB.create = function (value0) {
        return function (value1) {
            return new BB(value0, value1);
        };
    };
    return BB;
})();
var BC = (function () {
    function BC(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    BC.create = function (value0) {
        return function (value1) {
            return new BC(value0, value1);
        };
    };
    return BC;
})();
var C0 = (function () {
    function C0(value0) {
        this.value0 = value0;
    };
    C0.create = function (value0) {
        return new C0(value0);
    };
    return C0;
})();
var C1 = (function () {
    function C1(value0) {
        this.value0 = value0;
    };
    C1.create = function (value0) {
        return new C1(value0);
    };
    return C1;
})();
var C2 = (function () {
    function C2(value0) {
        this.value0 = value0;
    };
    C2.create = function (value0) {
        return new C2(value0);
    };
    return C2;
})();
var C3 = (function () {
    function C3(value0) {
        this.value0 = value0;
    };
    C3.create = function (value0) {
        return new C3(value0);
    };
    return C3;
})();
var C4 = (function () {
    function C4(value0) {
        this.value0 = value0;
    };
    C4.create = function (value0) {
        return new C4(value0);
    };
    return C4;
})();
var C5 = (function () {
    function C5(value0) {
        this.value0 = value0;
    };
    C5.create = function (value0) {
        return new C5(value0);
    };
    return C5;
})();
var C6 = (function () {
    function C6(value0) {
        this.value0 = value0;
    };
    C6.create = function (value0) {
        return new C6(value0);
    };
    return C6;
})();
var CA = (function () {
    function CA(value0) {
        this.value0 = value0;
    };
    CA.create = function (value0) {
        return new CA(value0);
    };
    return CA;
})();
var CB = (function () {
    function CB() {

    };
    CB.value = new CB();
    return CB;
})();
var CC = (function () {
    function CC(value0) {
        this.value0 = value0;
    };
    CC.create = function (value0) {
        return new CC(value0);
    };
    return CC;
})();
var CD = (function () {
    function CD() {

    };
    CD.value = new CD();
    return CD;
})();
var E0 = (function () {
    function E0(value0) {
        this.value0 = value0;
    };
    E0.create = function (value0) {
        return new E0(value0);
    };
    return E0;
})();
var E1 = (function () {
    function E1(value0) {
        this.value0 = value0;
    };
    E1.create = function (value0) {
        return new E1(value0);
    };
    return E1;
})();
var EA = (function () {
    function EA() {

    };
    EA.value = new EA();
    return EA;
})();
var EB = (function () {
    function EB() {

    };
    EB.value = new EB();
    return EB;
})();
var F0 = (function () {
    function F0(value0) {
        this.value0 = value0;
    };
    F0.create = function (value0) {
        return new F0(value0);
    };
    return F0;
})();
var F1 = (function () {
    function F1(value0) {
        this.value0 = value0;
    };
    F1.create = function (value0) {
        return new F1(value0);
    };
    return F1;
})();
var FE = (function () {
    function FE() {

    };
    FE.value = new FE();
    return FE;
})();
var O0 = (function () {
    function O0() {

    };
    O0.value = new O0();
    return O0;
})();
var FF = (function () {
    function FF() {

    };
    FF.value = new FF();
    return FF;
})();
var FC = (function () {
    function FC() {

    };
    FC.value = new FC();
    return FC;
})();
var FD = (function () {
    function FD() {

    };
    FD.value = new FD();
    return FD;
})();
var D0 = (function () {
    function D0(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    D0.create = function (value0) {
        return function (value1) {
            return new D0(value0, value1);
        };
    };
    return D0;
})();
var D1 = (function () {
    function D1(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    D1.create = function (value0) {
        return function (value1) {
            return new D1(value0, value1);
        };
    };
    return D1;
})();
var D2 = (function () {
    function D2(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    D2.create = function (value0) {
        return function (value1) {
            return new D2(value0, value1);
        };
    };
    return D2;
})();
var D3 = (function () {
    function D3(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    D3.create = function (value0) {
        return function (value1) {
            return new D3(value0, value1);
        };
    };
    return D3;
})();
var D4 = (function () {
    function D4(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    D4.create = function (value0) {
        return function (value1) {
            return new D4(value0, value1);
        };
    };
    return D4;
})();
var DA = (function () {
    function DA(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DA.create = function (value0) {
        return function (value1) {
            return new DA(value0, value1);
        };
    };
    return DA;
})();
var DB = (function () {
    function DB(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DB.create = function (value0) {
        return function (value1) {
            return new DB(value0, value1);
        };
    };
    return DB;
})();
var DC = (function () {
    function DC(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    DC.create = function (value0) {
        return function (value1) {
            return new DC(value0, value1);
        };
    };
    return DC;
})();
var showReg = new Data_Show.Show(function (v) {
    if (v instanceof AL) {
        return "AL";
    };
    if (v instanceof BL) {
        return "BL";
    };
    if (v instanceof CL) {
        return "CL";
    };
    if (v instanceof DL) {
        return "DL";
    };
    throw new Error("Failed pattern match at Samph.Types line 10, column 3 - line 11, column 3: " + [ v.constructor.name ]);
});
var showLit = new Data_Show.Show(function (v) {
    return Data_Int.toStringAs(Data_Int.hexadecimal)(v);
});
var showAddrReg = new Data_Show.Show(function (v) {
    return "[" + (Data_Show.show(showReg)(v) + "]");
});
var showAddrLit = new Data_Show.Show(function (v) {
    return "[" + (Data_Int.toStringAs(Data_Int.hexadecimal)(v) + "]");
});
var showCompact = new Data_Show.Show(function (v) {
    var show1 = function (v1) {
        if (v1 instanceof RegA) {
            return Data_Show.show(showReg)(v1.value0);
        };
        if (v1 instanceof LitA) {
            return Data_Show.show(showLit)(v1.value0);
        };
        if (v1 instanceof AddrLitA) {
            return Data_Show.show(showAddrLit)(v1.value0);
        };
        if (v1 instanceof AddrRegA) {
            return Data_Show.show(showAddrReg)(v1.value0);
        };
        if (v1 instanceof Empty) {
            return "";
        };
        throw new Error("Failed pattern match at Samph.Types line 139, column 5 - line 140, column 5: " + [ v1.constructor.name ]);
    };
    var show$prime = function (v1) {
        return function (v2) {
            if (v1 instanceof Empty) {
                return "";
            };
            if (v2 instanceof Empty) {
                return " " + show1(v1);
            };
            return " " + (show1(v1) + (" " + show1(v2)));
        };
    };
    return Data_Int.toStringAs(Data_Int.hexadecimal)(v.value0) + show$prime(v.value1)(v.value2);
});
var semiRingLit = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
        return Data_Int_Bits.and(v + v1 | 0)(255);
    };
}, function (v) {
    return function (v1) {
        return Data_Int_Bits.and(v * v1 | 0)(255);
    };
}, 1, 0);
var ringLit = new Data_Ring.Ring(function () {
    return semiRingLit;
}, function (v) {
    return function (v1) {
        return Data_Int_Bits.and(v - v1)(255);
    };
});
var eqReg = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof AL && v1 instanceof AL) {
            return true;
        };
        if (v instanceof BL && v1 instanceof BL) {
            return true;
        };
        if (v instanceof CL && v1 instanceof CL) {
            return true;
        };
        if (v instanceof DL && v1 instanceof DL) {
            return true;
        };
        return false;
    };
});
var eqLit = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var ordLit = new Data_Ord.Ord(function () {
    return eqLit;
}, function (v) {
    return function (v1) {
        return Data_Ord.compare(Data_Ord.ordInt)(v)(v1);
    };
});
var eqAddrReg = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return Data_Eq.eq(eqReg)(v)(v1);
    };
});
var eqAddrLit = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v === v1;
    };
});
var eqArg = new Data_Eq.Eq(function (v) {
    return function (v1) {
        if (v instanceof RegA && v1 instanceof RegA) {
            return Data_Eq.eq(eqReg)(v.value0)(v1.value0);
        };
        if (v instanceof LitA && v1 instanceof LitA) {
            return Data_Eq.eq(eqLit)(v.value0)(v1.value0);
        };
        if (v instanceof AddrLitA && v1 instanceof AddrLitA) {
            return Data_Eq.eq(eqAddrLit)(v.value0)(v1.value0);
        };
        if (v instanceof AddrRegA && v1 instanceof AddrRegA) {
            return Data_Eq.eq(eqAddrReg)(v.value0)(v1.value0);
        };
        if (v instanceof Empty && v1 instanceof Empty) {
            return true;
        };
        return false;
    };
});
var eqCompact = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return v.value0 === v1.value0 && (Data_Eq.eq(eqArg)(v.value1)(v1.value1) && Data_Eq.eq(eqArg)(v.value2)(v1.value2));
    };
});
var compact = function (v) {
    if (v instanceof A0) {
        return new Compact(160, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof A1) {
        return new Compact(161, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof A2) {
        return new Compact(162, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof A3) {
        return new Compact(163, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof A4) {
        return new Compact(164, new RegA(v.value0), Empty.value);
    };
    if (v instanceof A5) {
        return new Compact(165, new RegA(v.value0), Empty.value);
    };
    if (v instanceof A6) {
        return new Compact(166, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof AA) {
        return new Compact(170, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof AB) {
        return new Compact(171, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof AC) {
        return new Compact(172, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof AD) {
        return new Compact(173, new RegA(v.value0), Empty.value);
    };
    if (v instanceof A9) {
        return new Compact(169, new RegA(v.value0), Empty.value);
    };
    if (v instanceof B9) {
        return new Compact(185, new RegA(v.value0), Empty.value);
    };
    if (v instanceof C9) {
        return new Compact(201, new RegA(v.value0), Empty.value);
    };
    if (v instanceof D9) {
        return new Compact(217, new RegA(v.value0), Empty.value);
    };
    if (v instanceof B0) {
        return new Compact(176, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof B1) {
        return new Compact(177, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof B2) {
        return new Compact(178, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof B3) {
        return new Compact(179, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof B6) {
        return new Compact(182, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof BA) {
        return new Compact(186, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof BB) {
        return new Compact(187, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof BC) {
        return new Compact(188, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof C0) {
        return new Compact(192, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C1) {
        return new Compact(193, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C2) {
        return new Compact(194, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C3) {
        return new Compact(195, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C4) {
        return new Compact(196, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C5) {
        return new Compact(197, new LitA(v.value0), Empty.value);
    };
    if (v instanceof C6) {
        return new Compact(198, new LitA(v.value0), Empty.value);
    };
    if (v instanceof CA) {
        return new Compact(202, new LitA(v.value0), Empty.value);
    };
    if (v instanceof CB) {
        return new Compact(203, Empty.value, Empty.value);
    };
    if (v instanceof CC) {
        return new Compact(204, new LitA(v.value0), Empty.value);
    };
    if (v instanceof CD) {
        return new Compact(205, Empty.value, Empty.value);
    };
    if (v instanceof E0) {
        return new Compact(224, new RegA(v.value0), Empty.value);
    };
    if (v instanceof E1) {
        return new Compact(225, new RegA(v.value0), Empty.value);
    };
    if (v instanceof EA) {
        return new Compact(234, Empty.value, Empty.value);
    };
    if (v instanceof EB) {
        return new Compact(235, Empty.value, Empty.value);
    };
    if (v instanceof F0) {
        return new Compact(240, new LitA(v.value0), Empty.value);
    };
    if (v instanceof F1) {
        return new Compact(241, new LitA(v.value0), Empty.value);
    };
    if (v instanceof FE) {
        return new Compact(254, Empty.value, Empty.value);
    };
    if (v instanceof O0) {
        return new Compact(0, Empty.value, Empty.value);
    };
    if (v instanceof FF) {
        return new Compact(255, Empty.value, Empty.value);
    };
    if (v instanceof FC) {
        return new Compact(252, Empty.value, Empty.value);
    };
    if (v instanceof FD) {
        return new Compact(253, Empty.value, Empty.value);
    };
    if (v instanceof D0) {
        return new Compact(208, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof D1) {
        return new Compact(209, new RegA(v.value0), new AddrLitA(v.value1));
    };
    if (v instanceof D2) {
        return new Compact(210, new AddrLitA(v.value0), new RegA(v.value1));
    };
    if (v instanceof D3) {
        return new Compact(211, new RegA(v.value0), new AddrRegA(v.value1));
    };
    if (v instanceof D4) {
        return new Compact(212, new AddrRegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof DA) {
        return new Compact(218, new RegA(v.value0), new RegA(v.value1));
    };
    if (v instanceof DB) {
        return new Compact(219, new RegA(v.value0), new LitA(v.value1));
    };
    if (v instanceof DC) {
        return new Compact(220, new RegA(v.value0), new AddrLitA(v.value1));
    };
    throw new Error("Failed pattern match at Samph.Types line 152, column 1 - line 152, column 50: " + [ v.constructor.name ]);
};
var eqMach = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(eqCompact)(compact(x))(compact(y));
    };
});
var showMach = new Data_Show.Show(function ($157) {
    return Data_Show.show(showCompact)(compact($157));
});
var commutativeRingLit = new Data_CommutativeRing.CommutativeRing(function () {
    return ringLit;
});
var euclidianRingLit = new Data_EuclideanRing.EuclideanRing(function () {
    return commutativeRingLit;
}, function (v) {
    return Data_EuclideanRing.degree(Data_EuclideanRing.euclideanRingInt)(v);
}, function (v) {
    return function (v1) {
        return Data_Int_Bits.and(v / v1 | 0)(255);
    };
}, function (v) {
    return function (v1) {
        return Data_Int_Bits.and(v % v1)(255);
    };
});
var boundedLit = new Data_Bounded.Bounded(function () {
    return ordLit;
}, 0, 255);
module.exports = {
    AddrLit: AddrLit, 
    AddrReg: AddrReg, 
    RegA: RegA, 
    LitA: LitA, 
    AddrLitA: AddrLitA, 
    AddrRegA: AddrRegA, 
    Empty: Empty, 
    Compact: Compact, 
    Lit: Lit, 
    A0: A0, 
    A1: A1, 
    A2: A2, 
    A3: A3, 
    A4: A4, 
    A5: A5, 
    A6: A6, 
    AA: AA, 
    AB: AB, 
    AC: AC, 
    AD: AD, 
    A9: A9, 
    B9: B9, 
    C9: C9, 
    D9: D9, 
    B0: B0, 
    B1: B1, 
    B2: B2, 
    B3: B3, 
    B6: B6, 
    BA: BA, 
    BB: BB, 
    BC: BC, 
    C0: C0, 
    C1: C1, 
    C2: C2, 
    C3: C3, 
    C4: C4, 
    C5: C5, 
    C6: C6, 
    CA: CA, 
    CB: CB, 
    CC: CC, 
    CD: CD, 
    E0: E0, 
    E1: E1, 
    EA: EA, 
    EB: EB, 
    F0: F0, 
    F1: F1, 
    FE: FE, 
    O0: O0, 
    FF: FF, 
    FC: FC, 
    FD: FD, 
    D0: D0, 
    D1: D1, 
    D2: D2, 
    D3: D3, 
    D4: D4, 
    DA: DA, 
    DB: DB, 
    DC: DC, 
    AL: AL, 
    BL: BL, 
    CL: CL, 
    DL: DL, 
    compact: compact, 
    showReg: showReg, 
    eqReg: eqReg, 
    showLit: showLit, 
    eqLit: eqLit, 
    boundedLit: boundedLit, 
    ordLit: ordLit, 
    semiRingLit: semiRingLit, 
    ringLit: ringLit, 
    commutativeRingLit: commutativeRingLit, 
    euclidianRingLit: euclidianRingLit, 
    showAddrLit: showAddrLit, 
    eqAddrLit: eqAddrLit, 
    showAddrReg: showAddrReg, 
    eqAddrReg: eqAddrReg, 
    eqArg: eqArg, 
    showCompact: showCompact, 
    eqCompact: eqCompact, 
    showMach: showMach, 
    eqMach: eqMach
};
