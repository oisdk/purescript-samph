"use strict";
var Prelude = require("../Prelude");
var Control_Monad_Eff_Console_1 = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Console_1 = require("../Control.Monad.Eff.Console");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");

/**
 *  | Write a warning value to the console, using its `Show` instance to produce
 *  | a `String`. Shorthand for `liftEff $ warnShow x`.
 */
var warnShow = function (dictShow) {
    return function ($4) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.warnShow(dictShow)($4));
    };
};

/**
 *  | Write a warning to the console. Shorthand for `liftEff $ warn x`.
 */
var warn = function ($5) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.warn($5));
};

/**
 *  | Write a value to the console, using its `Show` instance to produce a
 *  | `String`. Shorthand for `liftEff $ logShow x`.
 */
var logShow = function (dictShow) {
    return function ($6) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.logShow(dictShow)($6));
    };
};

/**
 *  | Write a message to the console. Shorthand for `liftEff $ log x`.
 */
var log = function ($7) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.log($7));
};

/**
 *  | Write an info value to the console, using its `Show` instance to produce a
 *  | `String`. Shorthand for `liftEff $ infoShow x`.
 */
var infoShow = function (dictShow) {
    return function ($8) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.infoShow(dictShow)($8));
    };
};

/**
 *  | Write an info message to the console. Shorthand for `liftEff $ info x`.
 */
var info = function ($9) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.info($9));
};

/**
 *  | Write an error value to the console, using its `Show` instance to produce a
 *  | `String`. Shorthand for `liftEff $ errorShow x`.
 */
var errorShow = function (dictShow) {
    return function ($10) {
        return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.errorShow(dictShow)($10));
    };
};

/**
 *  | Write an error to the console. Shorthand for `liftEff $ error x`.
 */
var error = function ($11) {
    return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console_1.error($11));
};
module.exports = {
    error: error, 
    errorShow: errorShow, 
    info: info, 
    infoShow: infoShow, 
    log: log, 
    logShow: logShow, 
    warn: warn, 
    warnShow: warnShow
};
